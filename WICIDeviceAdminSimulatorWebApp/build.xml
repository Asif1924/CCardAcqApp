<?xml version="1.0" encoding="UTF-8"?>
<!--
Name should have no spaces and be only alpha characters.
The project name will be used to generate your .zip archive and .war file
-->
<project name="WICIDeviceAdminSimulatorWebApp" default="build.and.deploy" basedir="./">
    <description>
    	WICIDeviceAdminSimulatorWebApp
    </description>
    <property file="local.properties"/>
    <property file="build.properties"/>
    <target name="clean" description="clean up">
        <echo message="Deleting ${build.dir} directory..."/>
        <delete dir="${build.dir}"/>
        <echo message="${build.dir} directory deleted."/>
    </target>

	<target name="generate.connection.details">
        <echo message="Generating Global Connection Details File..."/>
        <echo file="WebContent/script/connectionDetails.js">
	        ensureNamespaceExists();
	    	WICI.middlewareBrokerURL  			= "${middlewareBroker.url}";
	    	WICI.webAppURL 						= "${webApp.url}";
	    	WICI.middlewareBrokerName 			= "${middlewareBroker.name}";
	    	WICI.webAppName						= "${webApp.name}";
	    	WICI.middlewareBrokeInvokedResource	= "${middlewareBroke.invoked.resource}";
	    	WICI.webAppInvokedResource			= "${webApp.invoked.resource}";
	    	WICI.webAppInvokedResourceParam		= "${webApp.invoked.resource.param}";
        	WICI.webAppInvokedLanguageParam		= "${webApp.invoked.language.param}";

	    	WICI.middlewareBrokerDeviceAdminPath= WICI.middlewareBrokerURL + WICI.middlewareBrokerName + '/' + WICI.middlewareBrokeInvokedResource;
	    	WICI.webAppFullPath					= WICI.webAppURL + WICI.webAppName + '/' + WICI.webAppInvokedResource + '?' + WICI.webAppInvokedResourceParam + '={0}&amp;' + WICI.webAppInvokedLanguageParam + '={1}';
        </echo>
        <echo message="Global Connection Details File Generated."/>
	</target>

	<!--Build Targets //-->
	<target name="deploy.to.server">
		<echo message="Copying files from ${build.dir} to ${deploy.location}"/>
        <copy overwrite="true" todir="${deploy.location}">
            <fileset dir="${build.dir}/web_files">
                <include name="**/*.*"/>
            </fileset>
        </copy>
	</target>

	<target name="build" depends="clean,generate.connection.details">
        <!-- Copy files to build folder//-->
        <copy todir="${build.dir}/web_files">
            <fileset dir="WebContent">
                <include name="**/*.*"/>
            </fileset>
        </copy>
	</target>

	<target name="create.war.file">
		<echo message="Creating Production WAR File..."/>
		<!-- Create temporary folder for war package content //-->
		<mkdir dir="${output.dir.war.file}/temporary"/>
		<copy todir="${output.dir.war.file}/temporary">
			<!-- Copy app folder and index.html file //-->
		   	<fileset dir="${build.dir}/web_files">
		     	<include name="**/*"/>
		    </fileset>
			<!-- Copy war_contents folder contents //-->
			<fileset dir="${war.contents.dir}">
				<include name="**/*"/>
			</fileset>
		</copy>
		<jar jarfile="${output.dir.war.file}/${application.name}.war" basedir="${output.dir.war.file}/temporary"></jar>
		<delete dir="${output.dir.war.file}/temporary"/>
	</target>

	<target name="create.ear.file" depends="create.war.file">
		<echo message="Creating Production EAR File..."/>
		<!-- Create temporary folder for war package content //-->
		<mkdir dir="${output.dir.ear.file}/temporary"/>
		<copy todir="${output.dir.ear.file}/temporary">
			<!-- Copy war file //-->
		   	<fileset dir="${output.dir.war.file}">
		     	<include name="${application.name}.war"/>
		    </fileset>
			<!-- Copy ear_contents folder contents //-->
			<fileset dir="${ear.contents.dir}">
				<include name="**/*"/>
			</fileset>
		</copy>
		<jar jarfile="${output.dir.ear.file}/${application.name}.ear" basedir="${output.dir.ear.file}/temporary"></jar>
		<delete dir="${output.dir.ear.file}/temporary"/>
	</target>

	<target name="copy.web.files.to.artifact.location">
		<echo message="Copying web files from ${build.dir}/web_files to ${copy.to.artifact.location.web.file}"/>
		<mkdir dir="${copy.to.artifact.location.web.file}"/>
		<copy todir="${copy.to.artifact.location.web.file}" overwrite="true">
		   	<fileset dir="${build.dir}/web_files">
		     	<include name="**/*"/>
		    </fileset>
		</copy>
	</target>

	<target name="copy.ear.file.to.artifact.location">
		<tstamp>
			<format property="date.time.stamp" pattern="MMddyyyy_hhmmaa" timezone="GMT-4"/>
		</tstamp>
		<echo message="Copying ear file from ${output.dir.ear.file}/${application.name}.ear to ${copy.to.artifact.location.ear.file}/${date.time.stamp}_${new.ear.filename}"/>
		<copy file="${output.dir.ear.file}/${application.name}.ear" overwrite="true" tofile="${copy.to.artifact.location.ear.file}/${date.time.stamp}_${new.ear.filename}"/>
		<echo message="${copy.to.artifact.location.ear.file}/${date.time.stamp}_${new.ear.filename} copied."/>
	</target>

    <target name="build.and.deploy" depends="build,deploy.to.server" description="just build and deploy the damn thing"/>
	<target name="build.create.ear" depends="build,create.ear.file" description="build all with no tests"/>
	<target name="build.web.ear.copy.artifacts" depends="build,create.ear.file,copy.web.files.to.artifact.location,copy.ear.file.to.artifact.location" description="build all with no tests"/>

</project>
