
package com.cantire.persistservice;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "PersistService", targetNamespace = "http://persistservice.cantire.com/", wsdlLocation = "WEB-INF/wsdl/SaveCustomerCardData.wsdl")
public class PersistService
    extends Service
{

    private final static URL PERSISTSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(com.cantire.persistservice.PersistService.class.getName());

    static {
        URL url = null;
        try {
            url = com.cantire.persistservice.PersistService.class.getResource("/WEB-INF/wsdl/SaveCustomerCardData.wsdl");
            if (url == null) throw new MalformedURLException("/WEB-INF/wsdl/SaveCustomerCardData.wsdl does not exist in the module.");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'WEB-INF/wsdl/SaveCustomerCardData.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        PERSISTSERVICE_WSDL_LOCATION = url;
    }

    public PersistService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PersistService() {
        super(PERSISTSERVICE_WSDL_LOCATION, new QName("http://persistservice.cantire.com/", "PersistService"));
    }

    /**
     * 
     * @return
     *     returns PersistServiceDelegate
     */
    @WebEndpoint(name = "PersistService")
    public PersistServiceDelegate getPersistService() {
        return super.getPort(new QName("http://persistservice.cantire.com/", "PersistService"), PersistServiceDelegate.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PersistServiceDelegate
     */
    @WebEndpoint(name = "PersistService")
    public PersistServiceDelegate getPersistService(WebServiceFeature... features) {
        return super.getPort(new QName("http://persistservice.cantire.com/", "PersistService"), PersistServiceDelegate.class, features);
    }

}
