# Ant
# Build your Java projects and run tests with Apache Ant.
# Add steps that save build artifacts and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:
  antSDKDIR: $(SDKDIR)
  antWEBAPP_ARTIFACT_DEBUG: $(Build.BinariesDirectory)\$(WEBAPPNAME)\$(WEBAPP_ARTIFACT_DEBUG)
  antWEBAPP_ARTIFACT_RELEASE: $(Build.BinariesDirectory)\$(WEBAPPNAME)\$(WEBAPP_ARTIFACT_RELEASE)
  antMOBILE_ARTIFACT_DEBUG: $(MOBILE_ARTIFACT_DEBUG)

jobs:

- job: Build

  pool: 
    name: SelfHostedPool
    demands: 
      - Agent.Name -equals WICIBuildVM

  steps: 
  - script: |
      echo 'Build.BinariesDirectory=$(Build.BinariesDirectory)'
      echo 'Build.SourcesDirectory=$(Build.SourcesDirectory)'
      echo 'Agent.BuildDirectory=$(Agent.BuildDirectory)'
      echo 'antWEBAPP_ARTIFACT_DEBUG=$(antWEBAPP_ARTIFACT_DEBUG)'
      echo 'antWEBAPP_ARTIFACT_RELEASE=$(antWEBAPP_ARTIFACT_RELEASE)'
      echo 'SDKDIR=$(SDKDIR)'
    displayName: 'Injected Vars'

  - script: set
    displayName: Show Agent Environment
    
  - script: dir
    workingDirectory: $(Agent.BuildDirectory)
    displayName: List contents of a folder

  - task: Ant@1
    displayName: Build WICIWebApp3
    inputs: 
      options: |
        '-DwebAppArtifactDebugDir=$(antWEBAPP_ARTIFACT_DEBUG)'
        '-DwebAppArtifactReleaseDir=$(antWEBAPP_ARTIFACT_RELEASE)'
      
      buildFile: 'F:/DevTools/AzureAgent/vsts-agent-win-x64-3.232.3/_work/1/s/WICIWebApp3/build.xml'
      targets: 'build.all.no.tests.copy'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      
  - task: Ant@1
    displayName: Build WICIMobile3
    inputs: 
      options: '-DsdkDir=$(antSDKDIR)'
      workingDirectory: ''
      buildFile: 'F:/DevTools/AzureAgent/vsts-agent-win-x64-3.232.3/_work/1/s/WICIMobile3/build.xml'
      targets: 'jenkins.build.full.release'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      
      
